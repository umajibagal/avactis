<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
    <line>
      <![CDATA[A Test started]]>
    </line>
    <line>
      <![CDATA[demoTest Test started ]]>
    </line>
    <line>
      <![CDATA[demoTest Test passed ]]>
    </line>
    <line>
      <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_29.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_29.png' height='100' widht='100'/></a>]]>
    </line>
    <line>
      <![CDATA[A Test finished]]>
    </line>
    <line>
      <![CDATA[A2 Test started]]>
    </line>
    <line>
      <![CDATA[demoTest Test started ]]>
    </line>
    <line>
      <![CDATA[demoTest Test failed java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png' height='100' widht='100'/></a>]]>
    </line>
    <line>
      <![CDATA[A2 Test finished]]>
    </line>
    <line>
      <![CDATA[A3 Test started]]>
    </line>
    <line>
      <![CDATA[demoTest Test started ]]>
    </line>
    <line>
      <![CDATA[demoTest Test failed java.lang.AssertionError: expected [true] but found [false]]]>
    </line>
    <line>
      <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png' height='100' widht='100'/></a>]]>
    </line>
    <line>
      <![CDATA[A3 Test finished]]>
    </line>
    <line>
      <![CDATA[TakeScrenshot Test started]]>
    </line>
    <line>
      <![CDATA[testScreen Test started ]]>
    </line>
    <line>
      <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demo_03_09_2019_11_29_44.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demo_03_09_2019_11_29_44.png' height='100' widht='100'/></a>]]>
    </line>
    <line>
      <![CDATA[testScreen Test passed ]]>
    </line>
    <line>
      <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/testScreen_03_09_2019_11_29_44.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/testScreen_03_09_2019_11_29_44.png' height='100' widht='100'/></a>]]>
    </line>
  </reporter-output>
  <suite name="Regression Suite" duration-ms="16778" started-at="2019-09-03T05:59:28Z" finished-at="2019-09-03T05:59:45Z">
    <groups>
    </groups>
    <test name="A" duration-ms="1501" started-at="2019-09-03T05:59:28Z" finished-at="2019-09-03T05:59:29Z">
      <class name="A">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:A@7d907bac]" name="beforeTest" is-config="true" duration-ms="985" started-at="2019-09-03T05:59:28Z" finished-at="2019-09-03T05:59:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:A@7d907bac]" name="beforeClass" is-config="true" duration-ms="8" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:A@7d907bac]" name="beforeMethod" is-config="true" duration-ms="23" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void A.demoTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="demoTest()[pri:0, instance:A@7d907bac]" name="demoTest" duration-ms="22" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:29Z">
          <reporter-output>
            <line>
              <![CDATA[demoTest Test started ]]>
            </line>
            <line>
              <![CDATA[demoTest Test passed ]]>
            </line>
          </reporter-output>
        </test-method> <!-- demoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:A@7d907bac]" name="afterMethod" is-config="true" duration-ms="421" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoTest status=SUCCESS method=A.demoTest()[pri:0, instance:A@7d907bac] output=demoTest Test started ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_29.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_29.png' height='100' widht='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- A -->
    </test> <!-- A -->
    <test name="A2" duration-ms="671" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:30Z">
      <class name="A2">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:A2@79be0360]" name="beforeTest" is-config="true" duration-ms="419" started-at="2019-09-03T05:59:29Z" finished-at="2019-09-03T05:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:A2@79be0360]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:A2@79be0360]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void A2.demoTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="demoTest()[pri:0, instance:A2@79be0360]" name="demoTest" duration-ms="3" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at A2.demoTest(A2.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[demoTest Test started ]]>
            </line>
            <line>
              <![CDATA[demoTest Test failed java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- demoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:A2@79be0360]" name="afterMethod" is-config="true" duration-ms="244" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoTest status=FAILURE method=A2.demoTest()[pri:0, instance:A2@79be0360] output=demoTest Test started ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png' height='100' widht='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- A2 -->
    </test> <!-- A2 -->
    <test name="A3" duration-ms="554" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:31Z">
      <class name="A3">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:A3@72b6cbcc]" name="beforeTest" is-config="true" duration-ms="383" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:A3@72b6cbcc]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void A3.demoTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:A3@72b6cbcc]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="demoTest()[pri:0, instance:A3@72b6cbcc]" name="demoTest" duration-ms="1" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at A3.demoTest(A3.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[demoTest Test started ]]>
            </line>
            <line>
              <![CDATA[demoTest Test failed java.lang.AssertionError: expected [true] but found [false]]]>
            </line>
          </reporter-output>
        </test-method> <!-- demoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:A3@72b6cbcc]" name="afterMethod" is-config="true" duration-ms="166" started-at="2019-09-03T05:59:30Z" finished-at="2019-09-03T05:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoTest status=FAILURE method=A3.demoTest()[pri:0, instance:A3@72b6cbcc] output=demoTest Test started ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demoTest_03_09_2019_11_29_30.png' height='100' widht='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- A3 -->
    </test> <!-- A3 -->
    <test name="TakeScrenshot" duration-ms="13947" started-at="2019-09-03T05:59:31Z" finished-at="2019-09-03T05:59:45Z">
      <class name="com.framework.paratus.avactis.testScript.TakeScrenshot">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="beforeSuite" is-config="true" duration-ms="172" started-at="2019-09-03T05:59:28Z" finished-at="2019-09-03T05:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="beforeTest" is-config="true" duration-ms="348" started-at="2019-09-03T05:59:31Z" finished-at="2019-09-03T05:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-09-03T05:59:31Z" finished-at="2019-09-03T05:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-09-03T05:59:31Z" finished-at="2019-09-03T05:59:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.framework.paratus.avactis.testScript.TakeScrenshot.testScreen()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testScreen()[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="testScreen" duration-ms="13354" started-at="2019-09-03T05:59:31Z" finished-at="2019-09-03T05:59:44Z">
          <reporter-output>
            <line>
              <![CDATA[testScreen Test started ]]>
            </line>
            <line>
              <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demo_03_09_2019_11_29_44.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/demo_03_09_2019_11_29_44.png' height='100' widht='100'/></a>]]>
            </line>
            <line>
              <![CDATA[testScreen Test passed ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testScreen -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265]" name="afterMethod" is-config="true" duration-ms="239" started-at="2019-09-03T05:59:44Z" finished-at="2019-09-03T05:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScreen status=SUCCESS method=TakeScrenshot.testScreen()[pri:0, instance:com.framework.paratus.avactis.testScript.TakeScrenshot@5e853265] output=testScreen Test started ]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a href='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/testScreen_03_09_2019_11_29_44.png/'><img src='/home/sayaji/git/avactis/avactisFramework/src/main/resources/screenshots/testScreen_03_09_2019_11_29_44.png' height='100' widht='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.framework.paratus.avactis.testScript.TakeScrenshot -->
    </test> <!-- TakeScrenshot -->
  </suite> <!-- Regression Suite -->
</testng-results>
